version: '3.8'

services:
  # Go development environment
  go-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: go-transport-dev
    volumes:
      - .:/app
      - go-mod-cache:/go/pkg/mod
    ports:
      - "8080:8080"   # REST API
      - "8081:8081"   # gRPC
      - "8082:8082"   # WebSocket
      - "9090:9090"   # GraphQL
      - "6060:6060"   # Go documentation server
    environment:
      - CGO_ENABLED=0
      - GOOS=linux
    working_dir: /app
    command: tail -f /dev/null
    networks:
      - transport-network

  # PostgreSQL for data storage examples
  postgres:
    image: postgres:15-alpine
    container_name: transport-postgres
    environment:
      POSTGRES_DB: transport_db
      POSTGRES_USER: transport_user
      POSTGRES_PASSWORD: transport_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./testdata/sql:/docker-entrypoint-initdb.d
    networks:
      - transport-network

  # Redis for caching examples
  redis:
    image: redis:7-alpine
    container_name: transport-redis
    ports:
      - "6379:6379"
    networks:
      - transport-network

  # MinIO for object storage examples (S3-compatible)
  minio:
    image: minio/minio:latest
    container_name: transport-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - transport-network

volumes:
  go-mod-cache:
  postgres-data:
  minio-data:

networks:
  transport-network:
    driver: bridge